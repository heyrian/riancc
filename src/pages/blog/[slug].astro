---
import i18next, { changeLanguage, t } from 'i18next';
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { localizePath } from 'astro-i18next';
import { getArticleReadingTime } from '@utils/blog';
import { getRelatedPosts } from '../../../plugins/get-related-posts';
import Giscus from '@components/giscus.vue';

changeLanguage('zh');

// Generate a new path for every collection post
export async function getStaticPaths() {
    changeLanguage('zh');
    const blogEntries = await getCollection('blog');
    var localizedBlogEntries = blogEntries.filter(entry => entry.slug.startsWith(i18next.language));
    const posts = await getCollection('blog', ({ data }) => {
        return data.publishDate < new Date();
    });
    const allPosts = posts.filter(page => {
        const [lang, ...slug] = page.slug.split('/');
        return lang === i18next.language;
    });
    return localizedBlogEntries.map(post => {
        let slug = post.slug;
        slug = slug.substring(3).replaceAll('blog/', '');
        return {
            params: { slug: slug },
            props: {
                post: post,
                relatedPosts: getRelatedPosts(allPosts, post.slug, post.data.category)
            }
        };
    });
}
// Get the post directly from the prop on render
const { post, lang, relatedPosts } = Astro.props;
const { data, render } = post;
const { Content, headings, remarkPluginFrontmatter } = await render();
const readTime = getArticleReadingTime(post.body);
const lastModified = new Date(remarkPluginFrontmatter.lastModified);
---

<Layout title={post.data.title} lang={lang}>
    <article class="mx-8 grid grid-cols-5 grid-rows-8 gap-4 xl:mx-0">
        <div
            class="prose prose-lg col-span-5 row-span-8 mt-12 max-w-full dark:prose-invert lg:col-span-3 lg:col-start-2"
        >
            <header class="mt-12">
                <a
                    href={localizePath(`/blog/category/${post.data.category?.toLowerCase()}`)}
                    class="text-sm font-medium uppercase tracking-wider text-blue-400 no-underline dark:text-stone-400"
                >
                    {post.data.category}
                </a>
                <h1
                    class="mb-3 mt-1 text-4xl font-black dark:text-white lg:text-5xl lg:leading-tight lg:tracking-tight"
                >
                    {post.data.title}
                </h1>
                <div class="flex items-center gap-2">
                    <div class="flex w-full flex-wrap gap-3 md:w-auto">
                        {
                            post.data.tags.map(tag => (
                                <a
                                    href={localizePath(`/blog/tag/${tag?.toLowerCase()}`)}
                                    class="text-sm text-gray-500 dark:text-stone-300"
                                >
                                    #{tag}
                                </a>
                            ))
                        }
                    </div>
                </div>
                <div class="mt-4 flex flex-wrap items-center gap-2 md:flex-nowrap">
                    <time class="text-gray-400 dark:text-stone-400" datetime={post.data.publishDate.toISOString()}>
                        {
                            post.data.publishDate
                                .toLocaleDateString('zh-TW', { year: 'numeric', month: '2-digit', day: '2-digit' })
                                .replace(/\//g, '-')
                        }
                    </time>
                </div>
            </header>
            <div class="article mt-6 dark:text-gray-200">
                <Content />
            </div>

            <div class="my-12">
                {
                    relatedPosts.length > 0 && (
                        <>
                            <h2 class="text-2xl">延伸閱讀</h2>
                            <ul>
                                {relatedPosts.map(post => (
                                    <li>
                                        <a href={`/${post.slug}/`}>{post.data.title}</a>
                                    </li>
                                ))}
                            </ul>
                        </>
                    )
                }
            </div>
            <!-- <div class="mt-20">
                <a href={localizePath('/blog')}>
                    <div class="flex flex-row items-center justify-center dark:text-stone-200">
                        <Icon name="tabler:chevron-left" class="h-6 w-6" />
                        <p class="ml-2">{t('blog.back_blog_text')}</p>
                    </div>
                </a>
            </div> -->
        </div>
        <aside class="sticky top-32 col-span-1 col-start-5 row-start-2 hidden dark:text-white xl:block">
            <div class="px-6 2xl:px-10">
                <h2 class="text-xl font-black">目錄</h2>
                <div>
                    {
                        Boolean(headings.length) && (
                            <div>
                                <ul data-toc class="toc m-0 w-full list-none p-0">
                                    {headings.map(({ depth, slug: headingSlug, text }) => (
                                        <li>
                                            <a
                                                class={`toc-link block ${
                                                    depth <= 2 ? 'mt-3 text-base font-bold' : 'mt-2 pl-3 text-sm'
                                                }`}
                                                href={`#${headingSlug}`}
                                                aria-label={`移動到 ${text} 標題區塊`}
                                            >
                                                {text}
                                            </a>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        )
                    }
                </div>
            </div>
        </aside>
        <Giscus client:load />
    </article>
</Layout>

<style>
    :global(html) {
        /* ...TRUNCATED */

        color: hsl(var(--colour-text-hue) var(--colour-text-saturation) var(--colour-text-luminance));

        scroll-behavior: smooth;
    }
    :global(h2[id], h3[id], h4[id], h5[id], h6[id]) {
        scroll-margin-top: 120px; /* 根據你的需求進行調整 */
    }
    @media (prefers-reduced-motion: reduce) {
        :global(html) {
            scroll-behavior: auto;
        }
    }
</style>
